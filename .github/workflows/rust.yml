name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
      - name: Rust cache
        uses: swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --verbose
      - name: Install dependencies
        run: sudo apt-get install -y mingw-w64
      - name: Install Windows target
        run: rustup target add x86_64-pc-windows-gnu
      - name: Install arm target
        run: rustup target add aarch64-unknown-linux-gnu
      - name: Build for Windows
        run: cargo build --target x86_64-pc-windows-gnu --release
      - name: Build for Linux
        run: cargo build --target aarch64-unknown-linux-gnu --release
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-build
          path: target/x86_64-pc-windows-gnu/release/*.exe
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-build
          path: target/aarch64-unknown-linux-gnu/release/rust-port
      - name: Gen Versioning Data
        id: versioning
        uses: Soumeh/Auto-Versioning@main
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-unknown-linux-gnu/release/rust-port
          asset_name: aula-api
          tag: ${{ steps.versioning.outputs.tag }}
          overwrite: true
